" Specify a directory for plugins
" - For Neovim: stdpath('data') . '/plugged'
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
" Plug 'ctrlpvim/ctrlp.vim'
Plug 'preservim/nerdtree'
" Plug 'altercation/vim-colors-solarized'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-endwise'
Plug 'github/copilot.vim'
Plug 'chrisbra/NrrwRgn'
" if has('nvim') || has('patch-8.0.902')
"   Plug 'mhinz/vim-signify'
" else
"   Plug 'mhinz/vim-signify', { 'branch': 'legacy' }
" endif
Plug 'mhinz/vim-startify'
" Plug 'vim-syntastic/syntastic'
Plug 'dense-analysis/ale'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'RRethy/nvim-treesitter-textsubjects'
Plug 'RRethy/nvim-base16'
Plug 'm-demare/hlargs.nvim'
Plug 'windwp/nvim-autopairs'
Plug 'windwp/nvim-ts-autotag'
Plug 'neovim/nvim-lspconfig'
Plug 'hrsh7th/vim-vsnip'
Plug 'hrsh7th/nvim-cmp'
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'ray-x/cmp-treesitter'
Plug 'ray-x/lsp_signature.nvim'

Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim'
Plug 'cpea2506/one_monokai.nvim'
Plug 'aktersnurra/no-clown-fiesta.nvim'
Plug 'mcchrish/zenbones.nvim'
Plug 'rktjmp/lush.nvim'
Plug 'mhartington/oceanic-next'
Plug 'AckslD/nvim-neoclip.lua'
Plug 'sunjon/shade.nvim'
Plug 'RRethy/vim-illuminate'
Plug 'lukas-reineke/indent-blankline.nvim'
Plug 'danymat/neogen'
Plug 'ggandor/lightspeed.nvim'
Plug 'petertriho/nvim-scrollbar'
Plug 'kosayoda/nvim-lightbulb'
Plug 'sainnhe/sonokai'
Plug 'navarasu/onedark.nvim'

" https://github.com/sjl/gundo.vim.git
" https://github.com/scrooloose/nerdcommenter.git
" https://github.com/alfredodeza/pytest.vim.git
" https://github.com/majutsushi/tagbar.git
" https://github.com/vim-scripts/taglist.vim.git
" https://github.com/tomtom/tlib_vim.git
" https://github.com/xsbeats/vim-blade.git
" https://github.com/tpope/vim-bundler.git
" https://github.com/tpope/vim-commentary.git
" https://github.com/terryma/vim-expand-region.git
" https://github.com/nvie/vim-flake8.git
" https://github.com/airblade/vim-gitgutter.git
" https://github.com/tpope/vim-rails.git
" https://github.com/tpope/vim-repeat.git
" https://github.com/vim-ruby/vim-ruby.git
" https://github.com/t9md/vim-surround_custom_mapping.git
" https://github.com/kana/vim-textobj-entire.git
" https://github.com/kana/vim-textobj-indent.git
" https://github.com/kana/vim-textobj-line.git
" https://github.com/kana/vim-textobj-user.git
" https://github.com/MarcWeber/vim-addon-mw-utils.git
" https://github.com/joonty/vim-phpqa.git
" https://github.com/kchmck/vim-coffee-script.git
" https://github.com/leafgarland/typescript-vim.git
" https://github.com/mustache/vim-mustache-handlebars.git
" https://github.com/tpope/vim-unimpaired.git
" https://github.com/ruanyl/vim-sort-imports.git
" https://github.com/itchyny/lightline.vim.git
" https://github.com/elixir-lang/vim-elixir.git

" Initialize plugin system
call plug#end()

syntax on
filetype on
filetype plugin indent on

"set showcmd          " Show (partial) command in status line.
set showmatch        " Show matching brackets.
set ignorecase    " Do case insensitive matching
set smartcase        " Do smart case matching
set incsearch        " Incremental search
set hlsearch
set mouse=a          " Enable mouse usage (all modes)
set autoindent
set textwidth=80
set number
set colorcolumn=100
set wrap
set linebreak
set nolist
set formatoptions+=l
set cursorline
set undofile
set backspace=2
set backupcopy=yes
set background=dark
set tabstop=4 softtabstop=4 expandtab shiftwidth=4 smarttab
set t_Co=256

set termguicolors
" colorscheme OceanicNext
" let g:sonokai_better_performance = 1
" colorscheme sonokai
colorscheme onedark
highlight! link SignColumn LineNr

"Multiple Paste
xnoremap p pgvy
set clipboard="+

"Toggle Paste
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode

"remove trailing spaces
autocmd BufWritePre * :%s/\s\+$//e

"Underline Search
highlight Search term=underline cterm=underline ctermbg=NONE ctermfg=Red

let g:surround_custom_mapping = {}
let g:surround_custom_mapping.python = {
            \ 'p':  "print( \r)",
            \ '[':  "[\r]",
            \ }



"do not insert *newline* chars when a line has exceeded its size
set textwidth=0 wrapmargin=0


" highlight trailing spaces
:nnoremap <Leader>wn :match ExtraWhitespace /\s\+$/<CR>
:highlight ExtraWhitespace ctermbg=161 guibg=#F92672
:autocmd ColorScheme * highlight ExtraWhitespace ctermbg=161 guibg=#F92672
:autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
:autocmd BufWinEnter * match ExtraWhitespace /^\t\+/
:autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
:autocmd InsertLeave * match ExtraWhitespace /\s\+$/
:autocmd InsertLeave * match ExtraWhitespace /^\t\+/
:autocmd BufWinLeave * call clearmatches()

" SYNTASTIC
"
" let g:syntastic_filetype_map = { "javascriptreact": "javascript" }
" let $NODE_PATH=system('npm config get prefix').'/lib/node_modules' . ':' . $NODE_PATH
" let g:syntastic_javascript_checkers = ['eslint']
" let g:syntastic_javascript_eslint_exe = 'NODE_PATH="$(npm config get prefix)/lib/node_modules" eslint'
" let g:phpqa_messdetector_ruleset = "/root/.apparatus/linters/phpmd/phpmd.xml"
" let g:phpqa_open_loc = 1
" let g:phpqa_codecoverage_autorun = 0
" let g:syntastic_json_jsonlint_args = "-V config.schema.json"
" "Syntastic for php
" let g:syntastic_php_phpcs_args="--report=csv --standard=Laravel"
" highlight SyntasticWarningSign ctermbg=NONE ctermfg=10


" ALE
"
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_insert_leave = 0
let g:ale_echo_cursor = 1
let g:ale_virtualtext_cursor = 0
" You can disable this option too
" if you don't want linters to run on opening a file
let g:ale_lint_on_enter = 0
let g:ale_linter_aliases = {'javascriptreact': ['javascript']}
let g:ale_linters = {
\   'javascript': ['eslint'],
\}
let g:ale_linters = {'javascriptreact': ['eslint']}
let g:ale_command_wrapper = 'NODE_PATH="$(npm config get prefix)/lib/node_modules"'
let g:ale_javascript_eslint_executable = 'eslint'
let g:ale_javascript_eslint_options = "--format compact"
highlight ALEWarningSign ctermbg=NONE ctermfg=10
highlight ALEWarning ctermbg=NONE ctermfg=NONE
highlight ALEError ctermbg=NONE ctermfg=NONE
set cmdheight=2

" LIGHTLINE
"
set laststatus=2
set noshowmode
let g:lightline = {
      \ 'colorscheme': 'solarized',
      \ 'active': {
      \   'left': [ [ 'path' ] ],
      \   'right': []
      \ },
      \ 'inactive': {
      \   'left': [ ['path'] ],
      \   'right': [[], [ 'gitbranch' ] ]
      \ },
      \ 'right': [ [ 'gitbranch' ] ],
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head',
      \   'path': 'LightLineFilename'
      \ }
      \ }
function! LightLineFilename()
  return expand('%')
endfunction

" Telescope

:nnoremap <silent> <C-p> :lua require'telescope.builtin'.git_files(require('telescope.themes').get_ivy({}))<CR>

" CtrlP
"

" nnoremap <leader>t :CtrlP<CR>
" let g:ctrlp_use_caching = 1
" let g:ctrlp_clear_cache_on_exit = 0
" let g:ctrlp_max_height = 20
" let g:ctrlp_match_window_reversed = 0
" let g:ctrlp_user_command = [
"     \ '.git', "cd %s && git ls-files . -co --exclude-standard | perl -lne 'print tr:/::, \" $_\"' | sort -n | cut -d' ' -f2",
"     \ 'find %s -type f'
"     \ ]

" GITGUTTER
"
let g:gitgutter_enabled = 1
let g:gitgutter_async = 1


" SIGNIFY
" default updatetime 4000ms is not good for async update
" set updatetime=100
" let g:signify_priority = 5
" let g:signify_sign_change = '~'

" NERDTREE
"
map <C-n> :NERDTreeToggle<CR>
map <C-o> :NERDTreeToggle %<CR>
let g:NERDTreeDirArrows=0
let NERDTreeShowHidden=1


" FILETYPES
"
autocmd FileType html setlocal tabstop=2 softtabstop=2 expandtab shiftwidth=2 smarttab
autocmd FileType javascript setlocal tabstop=2 softtabstop=2 expandtab shiftwidth=2 smarttab
autocmd FileType javascriptreact setlocal tabstop=2 softtabstop=2 expandtab shiftwidth=2 smarttab
autocmd FileType json setlocal tabstop=4 softtabstop=4 expandtab shiftwidth=4 smarttab
autocmd FileType yaml setlocal tabstop=2 softtabstop=2 expandtab shiftwidth=2 smarttab
autocmd FileType coffee setlocal tabstop=2 softtabstop=2 expandtab shiftwidth=2 smarttab
autocmd FileType typescript setlocal tabstop=2 softtabstop=2 expandtab shiftwidth=2 smarttab
autocmd FileType php setlocal expandtab textwidth=120 colorcolumn=120
autocmd FileType make set noexpandtab


" SHORTCUTS
"
"replace all selected text with Ctrl-r
vnoremap <C-R> "hy:%s/<C-r>h//gc<left><left><left>
"Movement sortcuts
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h
nnoremap tl :tabnext<CR>
nnoremap th :tabprev<CR>
nnoremap tn :tabnew<CR>
"leader key
"let mapleader = ","
"let g:mapleader = ","
:nnoremap <Leader>wf :match<CR>
"" remove whitespaces
:nnoremap <Leader>wnf :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>
