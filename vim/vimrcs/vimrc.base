""
"" Pathogen setup
""

execute pathogen#infect()
""
"" Customisations
""
"if filereadable(expand("~/.vim/vimrcs/vimrc.before"))
"  source ~/.vim/vimrcs/vimrc.before
"endif


" .vimrc.after is loaded after the plugins have loaded
"
"if filereadable(expand("~/.vim/vimrcs/vimrc.after"))
"  source ~/.vim/vimrcs/vimrc.after
"endif


" .vimrc.custom is loaded after the 'after' have loaded
"
"if filereadable(expand("~/.vim/vimrcs/vimrc.custom"))
"  source ~/.vim/vimrcs/vimrc.custom
"endif

syntax on
filetype on
filetype plugin indent on

set showcmd		  " Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase	" Do case insensitive matching
set smartcase		" Do smart case matching
set incsearch		" Incremental search
set hlsearch
set mouse=a		  " Enable mouse usage (all modes)
set autoindent
set tabstop=2
set expandtab
set softtabstop=2
set shiftwidth=2
set textwidth=80
set number
set colorcolumn=80
set wrap
set linebreak
set nolist
set formatoptions+=l
set cursorline

"leader key
let mapleader = ","
let g:mapleader = ","

" highlight trailing spaces
:highlight ExtraWhitespace ctermbg=161 guibg=#F92672
:autocmd ColorScheme * highlight ExtraWhitespace ctermbg=161 guibg=#F92672
:autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
:autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
:autocmd InsertLeave * match ExtraWhitespace /\s\+$/
:autocmd BufWinLeave * call clearmatches()

:nnoremap <Leader>wn :match ExtraWhitespace /\s\+$/<CR>
:nnoremap <Leader>wf :match<CR>

"" remove whitespaces
:nnoremap <Leader>wnf :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
set t_Co=256
set background=dark
let g:molokai_original = 1

if has('gui_running')
  "set background=light
  set guifont=Monospace\ 12
  colorscheme solarized
else
  colorscheme molokai
endif

"Movement sortcuts
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

"vim-markdown
let g:vim_markdown_folding_disabled=1

"CtrlP
nnoremap <leader>t :CtrlP<CR>
let g:ctrlp_use_caching = 1
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_max_height = 20
let g:ctrlp_match_window_reversed = 0

"easyytags
let g:easytags_by_filetype = '/home/mike/.vim/tags/'
let g:easytags_file = '/home/mike/.vim/tags/tags'
let g:easytags_auto_highlight = 0
let g:easytags_auto_update = 0
"let g:easytags_async = 1

"nerdtree
map <C-n> :NERDTreeToggle<CR>
let g:NERDTreeDirArrows=0
"autocmd BufEnter * lcd %:p:h

" gitgutter
let g:gitgutter_enabled = 0
nmap <leader>gd :GitGutterToggle<CR>:GitGutterLineHighlightsToggle<CR>
nnoremap <leader>gh :GitGutterNextHunk<CR>
nnoremap <leader>gH :GitGutterPrevHunk<CR>

" Gundo
nnoremap <leader>gun :GundoToggle<CR>
let g:gundo_right = 1

"Tagbar
nmap <silent><Leader>b :TagbarToggle<CR>

"TaskList
map <leader>td <Plug>TaskList

"let g:airline#extensions#branch#enabled = 1
"let g:airline#extensions#tabline#buffer_min_count = 1
"let g:airline#extensions#tabline#enabled = 1
"let g:airline#extensions#tabline#left_sep = ' '
"let g:airline#extensions#tabline#left_alt_sep = '|'
"let g:airline_section_y = ''
"let g:airline#extensions#virtualenv#enabled = 1
"let g:airline#extensions#whitespace#enabled = 1
"let g:airline#extensions#whitespace#symbol = '!'
