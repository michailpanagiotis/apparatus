execute pathogen#infect()

syntax on
filetype on
filetype plugin indent on

set showcmd		  " Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase	" Do case insensitive matching
set smartcase		" Do smart case matching
set incsearch		" Incremental search
set hlsearch
" set mouse=n		  " Enable mouse usage (all modes)
set autoindent
set laststatus=2
set smartindent
set tabstop=2
set expandtab
set softtabstop=2
set shiftwidth=2
set textwidth=80
set number
set colorcolumn=80
set wrap
set linebreak
set nolist
set formatoptions+=l
set cursorline
set backspace=2

set swapfile
set dir=~/.vim/tmp

"leader key
let mapleader = ","
let g:mapleader = ","

" highlight trailing spaces
:highlight ExtraWhitespace ctermbg=161 guibg=#F92672
:autocmd ColorScheme * highlight ExtraWhitespace ctermbg=161 guibg=#F92672
:autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
:autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
:autocmd InsertLeave * match ExtraWhitespace /\s\+$/
:autocmd BufWinLeave * call clearmatches()

"" remove whitespaces
:nnoremap <leader><space> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
set t_Co=256
set background=dark
colorscheme gruvbox

"Movement sortcuts
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

"ag
noremap <leader>a :Ag<space>
let g:ag_working_path_mode="r"
" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  let g:ackprg = 'ag --nocolor -g ""'

  let g:fzf_default_command ='ag --nocolor -g ""'
endif

"vim-flake8
autocmd BufWritePost *.py call Flake8()
let g:flake8_show_quickfix=0
let g:flake8_show_in_file=1
" use colors defined in the colorscheme
highlight link Flake8_Error      Error
highlight link Flake8_Warning    WarningMsg
highlight link Flake8_Complexity WarningMsg
highlight link Flake8_Naming     WarningMsg
highlight link Flake8_PyFlake    WarningMsg

"vim-markdown
let g:vim_markdown_folding_disabled = 1

"CtrlP
nnoremap <leader>t :CtrlP<CR>
nnoremap <leader>b :CtrlPBuffer<CR>
let g:ctrlp_use_caching = 1
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_max_height = 20
let g:ctrlp_match_window_reversed = 0

"fzf
set rtp+=/usr/local/opt/fzf

" Mapping selecting mappings
nmap <leader><tab> <plug>(fzf-maps-n)
xmap <leader><tab> <plug>(fzf-maps-x)
omap <leader><tab> <plug>(fzf-maps-o)

" Insert mode completion
imap <c-x><c-k> <plug>(fzf-complete-word)
imap <c-x><c-f> <plug>(fzf-complete-path)
imap <c-x><c-j> <plug>(fzf-complete-file-ag)
imap <c-x><c-l> <plug>(fzf-complete-line)

" Advanced customization using autoload functions
inoremap <expr> <c-x><c-k> fzf#vim#complete#word({'left': '15%'})

nmap ; :Buffers<CR>
nmap <Leader>t :Files<CR>
nmap <Leader>r :Tags<CR>

"easyytags
let g:easytags_by_filetype = '/Users/mike/.vim/tags/'
let g:easytags_file = '/Users/mike/.vim/tags/tags'
let g:easytags_auto_highlight = 0
let g:easytags_auto_update = 0
let g:easytags_async = 1

"nerdtree
map <C-n> :NERDTreeToggle<CR>
let g:NERDTreeDirArrows=0
"autocmd BufEnter * lcd %:p:h

"gitgutter
let g:gitgutter_enabled = 0
nmap <leader>gd :GitGutterToggle<CR>:GitGutterLineHighlightsToggle<CR>
nnoremap <leader>gh :GitGutterNextHunk<CR>
nnoremap <leader>gH :GitGutterPrevHunk<CR>

"Gundo
nnoremap <leader>gun :GundoToggle<CR>
let g:gundo_right = 1

"Tagbar
nmap <silent><leader>] :TagbarToggle<CR>

"TaskList
map <leader>td <Plug>TaskList

"vim-javacript
let g:javascript_plugin_jsdoc = 1

"vim-go
let g:go_auto_sameids = 1
let g:go_auto_type_info = 1
let g:go_fmt_command = "goimports"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_metalinter_autosave = 0
let g:go_metalinter_deadline = "5s"
autocmd FileType go nmap <Leader>i <Plug>(go-info)

"vim-syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1

let g:syntastic_aggregate_errors = 1

"vim-airline
let g:airline_theme='molokai'
let g:airline_detect_modified=1
let g:airline_extensions = ['branch', 'virtualenv', 'whitespace', 'syntastic']
set runtimepath^=~/.vim/bundle/ag

"haskell-vim
"g:haskell_classic_highlighting = 1
"g:haskell_indent_disable = 1
let g:haskell_enable_quantification = 1   " to enable highlighting of `forall`
let g:haskell_enable_recursivedo = 1      " to enable highlighting of `mdo` and `rec`
let g:haskell_enable_arrowsyntax = 1      " to enable highlighting of `proc`
let g:haskell_enable_pattern_synonyms = 1 " to enable highlighting of `pattern`
let g:haskell_enable_typeroles = 1        " to enable highlighting of type roles
let g:haskell_enable_static_pointers = 1  " to enable highlighting of `static`
let g:haskell_backpack = 1                " to enable highlighting of backpack keywords
