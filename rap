#!/bin/bash
set -e

export RAP_VERSION="9"
HOST=deployer.skroutz.gr

 
if [ "$OSTYPE" == "linux-gnu" ]
then
    SCRIPT_PATH=$(readlink -e $0)
elif [[ "$OSTYPE" =~ "darwin" ]]
then
    if [ $(command -v greadlink) ]
    then
        SCRIPT_PATH=$(greadlink -e $0)
    else
        echo "brew install coreutils"
        exit 4
    fi
fi

UPDATE_COMMAND=$(ssh -o 'SendEnv RAP_VERSION' wowbagger@$HOST check_version $SCRIPT_PATH)
if [ ! -z "$UPDATE_COMMAND" ]
then
    echo -en "executing $UPDATE_COMMAND\nIf command fails with ``permission denied``, run command"
    echo -en "manually after altering the destination path.\n"
    exec $UPDATE_COMMAND
fi

if [[ -d .git ]]
then
    if [[ $# -eq 2 ]]
    then
        PROJECT=$1; shift
	RAP_PROJECT=$PROJECT
        CMD=$1; shift
	# Check for staging
	CLUSTER=$(echo $PROJECT| sed 's/^staging://')
	if [ "$CLUSTER" != "$PROJECT" ]; then
		echo "Staging found: $CLUSTER"
		PROJECT=staging
		FLAVOR=$(ssh -t wowbagger@gntmgr.skroutz.gr get_flavor $CLUSTER 2> /dev/null | tr -d '\r\n')
		export CLUSTER
		export FLAVOR # contains alve/scrooge/skroutz
	fi
        bundle exec cap $PROJECT gity:prepare_deploy && \
        # rap skroutz deploy
        ssh -o 'SendEnv HOSTFILTER RAP_VERSION FLAVOR' -t wowbagger@$HOST $RAP_PROJECT $CMD
    else
        echo -ne "Wrong number of arguments\n\n\tUsage: $(basename $0) <stage> <command>\n"
    fi
else
    echo "You are someplace else"
fi
