[user]
  name = Panos Michail
  email = michailpanagiotis@gmail.com
[core]
  editor = vim
[diff]
  tool = vimdiff
[color]
  ui = true
[color "branch"]
    current = red reverse
    local = blue
    remote = green
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[alias]
  ci = commit
  cl = clone
  cp = cherry-pick
  st = status -s
  co = checkout
  df = diff
  br = branch

# reset aliases
  rh = reset --hard HEAD

# stash aliases
  sl = stash list
  sa = stash apply
  ss = stash save
  sp = stash pop

# list aliases
  la = "!git config -l | grep alias | cut -c 7-"

# log listing aliases
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s\\ %Cgreen(%cr)%Cblue\\ [%cn]" --date=relative --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=default
  le = log --oneline --decorate
  lc = log ORIG_HEAD.. --stat --no-merges
  llog = log --date=local
  who = shortlog -s --
  fl = log -u

# merging aliases
  cours = "!f() { git co --ours $@ && git add $@; }; f"
  ctheirs = "!f() { git co --theirs $@ && git add $@; }; f"

# file, commit changes aliases
  dl = "!git ll -1"
  dlc = diff --cached HEAD^
  dr  = "!f() { git diff "$1"^.."$1"; }; f"
  changes=diff --name-status -r
  diffstat=diff --stat -r

# other aliases
  pred = !zsh -c 'diff -u <(git rev-list --abbrev-commit --first-parent "${1:-master}") <(git rev-list --abbrev-commit --first-parent "${2:-HEAD}") | sed -ne \"s/^ //p\" | head -1' -
  branch-diff = !zsh -c 'diff -u <(git rev-list --abbrev-commit --first-parent "${1:-master}") <(git rev-list --abbrev-commit --first-parent "${2:-HEAD}") | sed -ne \"s/^ //p\" | head -1' - | xargs git diff --name-only HEAD..
  find-deprecated = "!f() { \
    { git branch --merged | grep -v master; git branch -vv | grep -v origin | awk '{print $1}'; git branch -vv | grep ': gone' | awk '{print $1}'; }; \
  }; f"

  prune-local = !zsh -c 'git find-deprecated >/tmp/merged-branches && vi /tmp/merged-branches && xargs git branch -D </tmp/merged-branches' -
[push]
  default = simple
